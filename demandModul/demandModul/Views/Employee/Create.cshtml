@model demandModul.Models.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{  
    <div class="form-horizontal">
        <h4>Create Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MailAddress, "Mail address", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameSurname, "Name and Surname", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameSurname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameSurname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.DropDownList("Department", new List<SelectListItem>
            {
               new SelectListItem{Text="Web Department" ,Value="Web Department"},
               new SelectListItem{Text="IK Department" ,Value="IK Department"},
               new SelectListItem{Text="Support Department" ,Value="Support Department"},
               new SelectListItem{Text="IT Department" ,Value="IT Department"},
               new SelectListItem{Text="Project Department" ,Value="Project Department"},
            }, new { @class = "select2 form-control" })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-10">
                @Html.DropDownList("Title", new List<SelectListItem>
             {
                new SelectListItem{Text="Worker" ,Value="Worker"},
                new SelectListItem{Text="Manager" ,Value="Manager"},
             }, new { @class = "select2 form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, "Password", new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-danger" />
            </div>
        </div>
    </div>
}


